# Generated by Django 4.1.4 on 2023-01-12 18:50

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("first_name", models.CharField(max_length=100, verbose_name="Имя")),
                ("last_name", models.CharField(max_length=100, verbose_name="Фамилия")),
                (
                    "patronymic",
                    models.CharField(max_length=100, verbose_name="Отчество"),
                ),
                (
                    "phone",
                    models.PositiveIntegerField(
                        default=7, verbose_name="Номер телефона"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        choices=[
                            ("SARAN", "Сарань"),
                            ("KAZ_BY", "Казыбек Би"),
                            ("BUKEY", "Букейханов"),
                            ("MAIKEN", "Майкудук"),
                            ("JBI", "ЖБИ"),
                            ("SHAHTINSK", "Шахтинск"),
                            ("ABAY", "Абай"),
                            ("TEMIRTAU", "Темиртау"),
                        ],
                        default="KAZ_BY",
                        max_length=100,
                        verbose_name="Город",
                    ),
                ),
                (
                    "job_title",
                    models.CharField(max_length=120, verbose_name="Должность"),
                ),
                ("iin", models.PositiveIntegerField(default=7, verbose_name="ИИН")),
                (
                    "groups",
                    models.ManyToManyField(to="auth.group", verbose_name="Группа"),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[("objects", django.contrib.auth.models.UserManager()),],
        ),
        migrations.CreateModel(
            name="CustomGroup",
            fields=[
                (
                    "group_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="auth.group",
                    ),
                ),
                (
                    "users",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователи",
                    ),
                ),
            ],
            options={"verbose_name": "Группа", "verbose_name_plural": "Группы",},
            bases=("auth.group",),
            managers=[("objects", django.contrib.auth.models.GroupManager()),],
        ),
    ]
